[General]
# simulation global configuration options 
simtime-scale = -15
sim-time-limit = 100000ms
cmdenv-express-mode = true
warmup-period = 0ms
network = DcnTopo
num-rngs = 1

####### include the transport config here#######
####include pseudoIdealTransportConfig.ini
include homaTransportConfig.ini

##### Don't change the following config line. parseXMLConfig() ######
#### function in WorkloadSynthesizer class depends on this line. ####
**.host[*].trafficGeneratorApp[0].destAddresses = moduleListByPath("**.host[*]")

############# per module configuration ###############
# Note: if you modified any of the parameters under this section make sure to
# reflect appropriate changes to IPAddress assignment section in
# IPv4Configurator section in config.xml.
DcnTopo.numServersPerTor = ${numServersPerTor = 4}
DcnTopo.numTors = ${numTors = 8}
DcnTopo.fabricLinkSpeed = ${fabricLinkSpeed = 40Gbps}
DcnTopo.nicLinkSpeed = ${nicLinkSpeed = 10Gbps}
DcnTopo.edgeLinkDelay = ${edgeLinkDelay = 0.0us}
DcnTopo.fabricLinkDelay = ${fabricLinkDelay = 0.0us}
DcnTopo.hostSwTurnAroundTime = ${hostSwTurnAroundTime = 0.5us}
DcnTopo.hostNicSxThinkTime = ${hostNicSxThinkTime = 0.5us}
DcnTopo.switchFixDelay = ${switchFixDelay = 0.25us}
DcnTopo.isFabricCutThrough = ${isFabricCutThrough = true}
**.host[*].numTrafficGeneratorApp = 1
**.eth[*].queueType = "DropTailQueue"

[Config RecordAllStats]
#disable vector recording for all modules
**.vector-recording = false

#udpApp stats
# **.rcvdPkLifetime.result-recording-modes = all
# **.udpApp[*].sentPk.result-recording-modes = all
# **.udpApp[*].rcvdPk.result-recording-modes = all

#WorkloadSynthesizer stats
**.trafficGeneratorApp[*].**.result-recording-modes = all

#HomaTransport stats
**.transportScheme.**.result-recording-modes = all

#EthernetMac stats
**.mac.txPk.result-recording-modes = all 
**.mac.rxPkOk.result-recording-modes = all
**.mac.frameRcvdTimeStamptAtMAC.result-recording-modes = all
**.mac.frameSentTimeStamptAtMAC.result-recording-modes = all

#DropTailQueue stats
**.dataQueue.rcvdPk.result-recording-modes = all
**.dataQueue.queueLength.result-recording-modes = all 
**.dataQueue.queueByteLength.result-recording-modes = all 
**.dataQueue.queueingTime.result-recording-modes = all 
**.dataQueue.requestQueueingTime.result-recording-modes = all 
**.dataQueue.grantQueueingTime.result-recording-modes = all 
**.dataQueue.schedDataQueueingTime.result-recording-modes = all 
**.dataQueue.unschedDataQueueingTime.result-recording-modes = all 

# Exclude every other stats from recording
**.result-recording-modes = -

[Config WorkloadWebServer]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].trafficGeneratorApp[*].workloadType = "${workloadType = FACEBOOK_WEB_SERVER_INTRACLUSTER}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.0015625, 0.015625, 0.025}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 30s, 10s, 5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}

[Config WorkloadHadoop]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].trafficGeneratorApp[*].workloadType = "${workloadType = FACEBOOK_HADOOP_ALL}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.0015625, 0.015625, 0.025}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 45s, 15s, 7.5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}

[Config WorkloadCacheFollower]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].trafficGeneratorApp[*].workloadType = "${workloadType = FACEBOOK_CACHE_FOLLOWER_INTRACLUSTER}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.0015625, 0.015625, 0.025}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 60s, 20s, 10s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}

[Config WorkloadDCTCP]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].trafficGeneratorApp[*].workloadType = "${workloadType = DCTCP}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.0015625, 0.015625, 0.025}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 60s, 30s, 15s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}

[Config WorkloadKeyValue]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].trafficGeneratorApp[*].workloadType = "${workloadType = FACEBOOK_KEY_VALUE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.001171875, 0.01171875, 0.01875}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 30s, 16s, 7.5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}

[Config TestDist]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].trafficGeneratorApp[*].workloadType = "${workloadType = TEST_DIST}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.0015625, 0.015625, 0.025}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = exponential}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime j= 30s, 10s, 5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}

[Config InFileDist]
extends = RecordAllStats
**.host[*].trafficGeneratorApp[*].typename = "WorkloadSynthesizer"
**.host[*].trafficGeneratorApp[*].workloadType = "${workloadType = PRESET_IN_FILE}"
**.host[*].trafficGeneratorApp[*].msgSizeRanges = "${msgSizeRanges = 100 1000 10000 100000 1000000 10000000}"
**.host[*].trafficGeneratorApp[*].loadFactor = ${loadFactor= 0.0015625, 0.015625, 0.025}
**.host[*].trafficGeneratorApp[*].interArrivalDist = "${interArrivalDist = preset_in_file}"
**.host[*].trafficGeneratorApp[*].startTime = ${startTime = 0s}
**.host[*].trafficGeneratorApp[*].stopTime = ${stopTime = 30s, 10s, 5s ! loadFactor}
seed-set = ${repetition}
seed-0-mt = ${seedInd = 0..2 ! loadFactor}
